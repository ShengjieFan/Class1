#Slice of array#
class Solution:
    def rotate(self, A: List[int], k: int) -> None:
        def reverse(i, j):
            while i < j:
                A[i], A[j] = A[j], A[i]
                i += 1
                j -= 1
        n = len(A)
        k %= n
        reverse(0, n - 1)
        reverse(0, k - 1)
        reverse(k, n - 1)




#first#
class Solution(object):
	def rotate(self,nums,k):
		lenth = len(nums) -1
		if lenth<1 or k<1:
			return 
		#暴力方法，将后面的删掉插到前面
		for i in range(k):
			nums.insert(0,nums[lenth])     #将最后一个插到前面来
			del nums[lenth + 1]     #多个一个数所以lenth+1，将插到前面的数字删除
		return nums
list= [1,2,4,5,7]
print(Solution().rotate(list,2))
            
 
 
 
 
#second#
class Solution(object):
    def rotate(self, nums, k):
        lenth = len(nums) - 1
        if lenth < 1 or k < 1:
           return

        if (k < lenth):
            nums.reverse()
            nums[0:k] = reversed(nums[0:k])
            nums[k:] = reversed(nums[k:])
        else:
            for i in range (k):
                nums.insert(0, nums[lenth])
                del nums[lenth + 1]


        return nums    

list = [1,2，3,4]      
print(Solution().rotate(list,2))




#third#
def TheReverseArray(list):
    length = len(list)
    a=[]
    for i in range(length):
        a.append(list[length - i-1])
    return a

print(TheReverseArray([1,2,4,5,2,3]))



#fourth#
def TheReverseArray(list):
    N = len(list)
    for i in range(int(len(list) / 2)):
        list[i], list[N - i - 1] = list[N - i - 1], list[i]
    return list

print(TheReverseArray([1,3,2,4]))




#simple#
arr = [1,2,3]
arr.reverse()
print(arr)         


